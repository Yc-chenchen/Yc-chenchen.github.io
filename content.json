{"meta":{"title":"Yc-chenchen 的博客","subtitle":"When you have eliminated all the impossible, whatever remains,however improbable, must be the truth.","description":"write less,do more","author":"Yc-chenchen","url":"http://example.com","root":"/"},"pages":[{"title":"404","date":"2022-05-23T04:36:37.000Z","updated":"2022-05-23T04:36:37.996Z","comments":true,"path":"404/index.html","permalink":"http://example.com/404/index.html","excerpt":"","text":""},{"title":"search","date":"2022-05-23T04:36:28.000Z","updated":"2022-05-23T04:36:28.304Z","comments":true,"path":"search/index.html","permalink":"http://example.com/search/index.html","excerpt":"","text":""}],"posts":[{"title":"LAMP+LNMP网站架构与运维实战大纲","slug":"LAMP-LNMP网站架构与运维实战大纲","date":"2022-05-23T17:07:12.000Z","updated":"2022-05-23T17:07:44.445Z","comments":true,"path":"2022/05/24/LAMP-LNMP网站架构与运维实战大纲/","link":"","permalink":"http://example.com/2022/05/24/LAMP-LNMP%E7%BD%91%E7%AB%99%E6%9E%B6%E6%9E%84%E4%B8%8E%E8%BF%90%E7%BB%B4%E5%AE%9E%E6%88%98%E5%A4%A7%E7%BA%B2/","excerpt":"","text":"（一）LAMP+LNMP网站架构与运维实战教学大纲课程名称：LAMP+LNMP网站架构与运维实战 课程类型: 专业基础课 总 学 时：88 讲课学时：44 实验学时：42 学 分：6 适用对象：网络管理技术 1．课程性质随着互联网技术的发展以及电子商务的兴起，Linux已经成为互联网上最为流行的网络操作系统，可以说，Linux系统成为支撑互联网发展的重要基石之一；Apache作为一个非常成熟的Web服务器系统，目前仍然统治者Web服务器市场；Nginx作为后起之秀，无论是在Web服务器方面，还是在反向代理以及负载均衡方面都是有及其优秀的性能；MySQL自从诞生起，就定位为互联网数据库，目前仍然是绝大部分网站后台数据库管理系统的首选；PHP已经逐步成为电子商务网站开发的主流技术。本书旨在系统介绍Linux、Apache、Nginx、MySQL以及PHP编程的相关知识和技巧。 2．课程目标(1)掌握LAMP的基础安装和配置。 (2)掌握LNMP的基础安装和配置。 (3)学会使用WordPress搭建自己的博客站点。 (4)掌握计划任务和作业调度。 （5）掌握LAMP和LANP性能监控。 （6）掌握Zabbix全方位监控服务。 3．课程内容及要求模块一：LAMPA是指Apache HTTP Server，为Web服务器软件。但是在业界人士口中，通常用Apache来代替Apache HTTP Server，尽管不是非常准确，但是这似乎已经成为了一个共识。M代表数据库管理系统，是指MySQL或者MariaDB，其中MariaDB是由MySQL派生出来的版本。字母P代表PHP、Python或者Perl等脚本语言 （1）Linux的安装使用 （2）Apache的安装使用 （3）MySQL的安装使用 （4）PHP的安装使用 （5）mysqli （6）PDO 模块二：使用WordPress搭建自己的博客站点LAMP是众多博客系统中使用最多的技术。本章将以WordPress为例，说明如何使用LAMP技术来开发一些实用的系统。 （1）准备环境 （2）系统安装 模块三：深入Linux掌握Linux日常运维中的Shell管理、磁盘管理和文件管理。 （1）认识与学习Shell （2）文件与目录管理 （3）磁盘与文件系统管理 模块四：深入MySQL数据库掌握高级的数据库功能，例如函数、存储引擎、视图以及事务管理等。。 （1）常用内置函数 （2）存储引擎 （3）字符集 （4）索引 （5）视图 （6）锁和事务 （7）MySQL权限管理 模块五：深入PHP编程掌握PHP的基础语法，因为PHP语言语法简洁，规则宽松，架构简单，基本不需要配置文件，并且内置了很多实用性强的函数，这使得PHP学习成本极低，使用起来非常灵活。 （1）条件语句 （2）循环语句 （3）跳转语句 （4）PHP数组 （5）PHP函数 （6）面向对象编程 模块六：SSL让网站更安全掌握SSL技术，近几年来，随着安全技术的发展，攻击和反攻击的对抗越来越明显，用户资料泄露的事件不断地出现。因此，网站的运营不仅仅满足于正常提供服务，还要尽最大可能地防止安全隐患。。 （1）什么是SSL （2）SSL证书申请 （3）Apache服务器配置SSL证书 （4）Nginx服务器配置SSL证书 模块七：LAMP什么是SSL安全管理LAMP中涉及到安全管理的技术要点，使得读者能够在学习本章之后，熟练掌握在LAMP的运营中如何加固自己的应用系统。 （1）Linux安SSL证书申请全管理 （2）Apache安Apache服务器配置SSL证书全管理 （3）MySQLNginx服务器配置SSL证书安全管理 （4）PHP安全管理 模块八：计划任务和作业调度在Linux系统中，掌握计划任务和作业调度可以在一定程度上实现系统运维的自动化。许多重复执行的任务以及非常耗时的任务都可以通过计划任务和作业来完成。充分利用计划任务和作业调度，会收到事半功倍的效果。 （1）计划任务 （2）作业调度 模块九：Nginx入门Nginx是一个高性能的HTTP服务器和反向代理服务器。将掌握它的安装配置和优化。 （1）安装Nginx （2）Nginx目录与配置文件 （3）配置虚拟主机 （4）Nginx性能优化 （5）集成PHP 模块十：深入Nginx掌握Nginx的高级应用，主要包括负载均衡和反向代理这两个方面。 （1）Nginx负载均衡 （2）Nginx反向代理 模块十一：LAMP和LANP性能监控掌握LAMP和LANP的各种监控命令和扩展模块。 （1）Linux常用监控命令 （2）Apache常用监控方法 （3）MySQL常用监控方法 （4）Nginx常用监控方法 （5）PHP-FPM常用监控方法 模块十二：Zabbix全方位监控服务掌握Zabbix系统的使用方法。 （1）Zabbix简介 （2）安装Zabbix （3）配置Zabbix监控服务 4．实践环节本课程包括LAMP入门、LAMP高级应用、搭建LNMP网站架构和网站系统监控四个部分。 （1）LAMP入门（模块一、模块二）（安装、配置、搭建博客，4学时） 1）了解安装各种框架的方式； 2）了解配置各种框架的方式； 3）掌握mysqli； 4）掌握PDO； （2）系统管理：（模块三、模块四、模块五、模块六、模块七、模块八）（16学时） 1）掌握Linux的高级内容，如Shell、文件管理； 2）熟悉MySQL数据库的特色，如函数、索引、事务； 3）学会PHP编程，掌握其基础语法； 4）掌握SSL的证书管理； 5）掌握计划任务和作业调度； 6）掌握LAMP下的SSL管理。 （3）搭建LNMP网站架构：（模块九、模块十，上机实践15学时） 1）安装并配置Nginx； 2）集成PHP； 3）了解Nginx负载均衡； 4）了解Nginx反向代理。 （4）网站系统监控：（模块十一、模块十二，上机实践20学时） 1）Linux常用监控命令 2）Apache常用监控方法 3）MySQL常用监控方法 4）Nginx常用监控方法 5）PHP-FPM常用监控方法 6）安装Zabbix 7）配置Zabbix监控服务 5．各教学环节学时分配 章节（或内容） 讲课 习题课 讨论课 实验 其它 合计 互联网“打工人”的LAMP 2 使用WordPress搭建自己的博客站点 2 2 深入Linux 4 4 深入MySQL数据库 4 2 深入PHP编程 4 4 SSL让网站更安全 4 4 LAMP什么是SSL安全管理 4 4 计划任务和作业调度 4 4 Nginx入门 4 4 深入Nginx 4 4 LAMP和LANP性能监控 4 4 Zabbix全方位监控服务 4 4 合计 44 40 88 6．考核方式本课程考核为期末闭卷笔试和平时考核相结合。学生的课程总评成绩由平时成绩（占30%）和期末考试成绩（占70%）两部分构成，平时成绩中实验成绩占60%，出勤、作业、课堂提问、学习主动性等各占10%。 7．推荐教材和教学参考书教 材： 《LAMP+LNMP网站架构与运维实战》， 清华大学出版社，2021.6","categories":[],"tags":[]},{"title":"hexo指令详解","slug":"hexo指令","date":"2022-05-23T15:49:25.000Z","updated":"2022-05-23T16:49:31.332Z","comments":true,"path":"2022/05/23/hexo指令/","link":"","permalink":"http://example.com/2022/05/23/hexo%E6%8C%87%E4%BB%A4/","excerpt":"","text":"0.对main分支进行部署更新123$ hexo clean # 清理缓存，可选用$ hexo g # 生成资源文件$ hexo d # 部署到服务器 此命令使刚刚完成写作的文章自动生成网站静态文件，并部署到设 定的仓库。 1.hexo init hexo init 命令用于初始化本地文件夹为网站的根目录 1$ hexo init [folder] folder 可选参数，用以指定初始化目录的路径，若无指定则默认为当前目录 2.hexo new hexo new 命令用于新建文章，一般可以简写为 hexo n 1$ hexo new [layout] &lt;title&gt; layout 可选参数，用以指定文章类型，若无指定则默认由配置文件中的 default_layout 选项决定 必填参数，用以指定文章标题，如果参数值中含有空格，则需要使用双引号包围 在博客根目录下面执行： 1$ hexo new &quot;文章标题&quot; 例如：你想创建一个名为”我的第一个博客“的文章 ，可以执行： 1$ hexo new &quot;my-first-blog&quot; 文章链接建议是英文，然后会显示你的文章生成的目录，每次生成的文章都固定在你的博客根目录下面的source/_posts下 3.hexo generate hexo generate 命令用于生成静态文件，一般可以简写为 hexo g 1$ hexo generate -d 选项，指定生成后部署，与 hexo d -g 等价 4.hexo server hexo server 命令用于启动本地服务器，一般可以简写为 hexo s 1$ hexo server -p 选项，指定服务器端口，默认为 4000 -i 选项，指定服务器 IP 地址，默认为 0.0.0.0 -s 选项，静态模式 ，仅提供 public 文件夹中的文件并禁用文件监视 说明 ：运行服务器前需要安装 hexo-server 插件 1$ npm install hexo-server --save 5.hexo deploy hexo deploy 命令用于部署网站，一般可以简写为 hexo d 1$ hexo deploy -g 选项，指定生成后部署，与 hexo g -d 等价 6.hexo clean hexo clean 命令用于清理缓存文件，是一个比较常用的命令 1$ hexo clean 网站显示异常时可尝试此操作","categories":[],"tags":[]},{"title":"个人简介","slug":"my-first-blog","date":"2022-05-20T13:13:05.000Z","updated":"2022-05-23T16:19:16.256Z","comments":true,"path":"2022/05/20/my-first-blog/","link":"","permalink":"http://example.com/2022/05/20/my-first-blog/","excerpt":"","text":"教育经历 河北软件职业技术学院 在读 爱好 打游戏 打游戏 打游戏","categories":[],"tags":[]}],"categories":[],"tags":[]}